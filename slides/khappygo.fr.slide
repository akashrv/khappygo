Khappygo
Deep learning en production

Olivier Wulveryck
Consultant
owulveryck@octo.com
https://github.com/owulveryck/khappygo
@owulveryck

* Agenda

* La société "RUH" (Are You Happy?)

Afin de satisfaire le besoin des *retailers* *physiques* d'amélioration de l'expérience utilisateur,

la société RUH propose un service de *colecte* et d'*analyse* *de* *sentiments* des clients à la sortie du magasin.

A la différence des autres produits, ce service ne demande *pas* *d'interractions* avec les clients.

.image assets/sad-4730689_640.png _ 300

* Application design

* Les services

- récupérer les images des clients à la sortie du magasin;
- extraire les visages depuis les images;
- extraire les sentiments depuis les images;
- stocker les sentiments;

* La récupération des images

Les images sont récupérées par un service web "REST" qui les dépose dans le système Google Cloud Storage.

.image service1.svg

* Le service de localisation des visages

.image service2.svg

- lit une image depuis un emplacement sur un bucket Cloud storage,
- applique un modèle de deep learning pour localiser les visages.
- génère ensuite _un_évènement_ par visage détecté


* Le service d'extraction des images

.image service3.svg

- lit une image
- extrait les bounding boxes (les visages)
- stock les images dans cloud storage

* Le service d'analyse de sentiment

.image service4.svg

- lit une image de visage
- extrait les sentiments en appliquant un modèle de deep-learning
- génère un évènement avec les sentiments

* Le service de reporting

- génère des enregistrements dans une base de donnée

* Les évènements

Les évènements sont décrit dans un format indépendant nommé "cloud events".

"cloud events" est une spécification qui permet de décrire les évènements d'une manière agnostique des applications
et des cloud providers.


.image assets/cloud-events.svg 90 _
.caption [[https://cloudevents.io/][https://cloudevents.io]]

La version 1.0 a été publiée le 24 Octobre 2019.

: if you want to indicate an event that is significant to your domain, raise this event explicitly and let the other classes in your domain model subscribe and react to it.
: https://enterprisecraftsmanship.com/posts/domain-events-simple-reliable-solution/

* L'infrastructure évènementielle

Extrait de la doc: [[https://docs.microsoft.com/fr-fr/dotnet/architecture/microservices/microservice-ddd-cqrs-patterns/domain-events-design-implementation][Domain events design implementation]]

_l’interface_du_bus_d’événements_a_besoin_d’une_infrastructure_permettant_une_communication_entre_processus_et_distribuée_entre_des_services_potentiellement_distants._


* knative eventing

[[https://knative.dev/docs/eventing/][Knative Eventing]] est un projet de la CNCF; c'est un ensemble d'extensions posées sur un cluster kubernetes.

Extrait du site officiel: _Knative_Eventing_is_a_system_that_is_designed_to_address_a_common_need_for_cloud_native_development_and_provides_composable_primitives_to_enable_late-binding_event_sources_and_event_consumers._

.image assets/knative-logo.png 60 _
.caption Knative
.image assets/Kubernetes_logo_without_workmark.png 60 _
.caption Kubernetes

* "data-science"

* Trouver les visages

Nous utilisons le modèle _YOLO_.
YOLO est un réseau de neurones qui permet la détection multi-objets.

.link https://pjreddie.com/darknet/yolo/
* logos

.image assets/Kubernetes_logo_without_workmark.png 60 _
.caption Kubernetes
.image assets/knative-logo.png 60 _
.caption Knative
.image assets/ONNX_logo_main.png 60 _
.caption ONNX
.image assets/Go-Logo_Blue.png 60 _
.caption Go
.image assets/gorgonia.svg 60 _
.caption Gorgonia


* Domain events

Extrait de la doc [[https://docs.microsoft.com/fr-fr/dotnet/architecture/microservices/microservice-ddd-cqrs-patterns/domain-events-design-implementation][Domain events design implementation]]

l’interface du bus d’événements a besoin d’une infrastructure permettant une communication entre processus et distribuée entre des services potentiellement distants.

Elle peut reposer sur un bus de services commercial, sur des files d’attente,
sur une base de données partagée utilisée comme une boîte aux lettres,
ou sur tout autre système de messagerie distribué et idéalement basé sur les opérations d’envoi (push).
